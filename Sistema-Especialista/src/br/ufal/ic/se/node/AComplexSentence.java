/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.ufal.ic.se.node;

import java.util.*;
import br.ufal.ic.se.analysis.*;

public class AComplexSentence extends PSentence
{
    private TLpar _lpar_;
    private PComplexsentence _complexsentence_;
    private TRpar _rpar_;

    public AComplexSentence()
    {
    }

    public AComplexSentence(
        TLpar _lpar_,
        PComplexsentence _complexsentence_,
        TRpar _rpar_)
    {
        setLpar(_lpar_);

        setComplexsentence(_complexsentence_);

        setRpar(_rpar_);

    }
    public Object clone()
    {
        return new AComplexSentence(
            (TLpar) cloneNode(_lpar_),
            (PComplexsentence) cloneNode(_complexsentence_),
            (TRpar) cloneNode(_rpar_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComplexSentence(this);
    }

    public TLpar getLpar()
    {
        return _lpar_;
    }

    public void setLpar(TLpar node)
    {
        if(_lpar_ != null)
        {
            _lpar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lpar_ = node;
    }

    public PComplexsentence getComplexsentence()
    {
        return _complexsentence_;
    }

    public void setComplexsentence(PComplexsentence node)
    {
        if(_complexsentence_ != null)
        {
            _complexsentence_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _complexsentence_ = node;
    }

    public TRpar getRpar()
    {
        return _rpar_;
    }

    public void setRpar(TRpar node)
    {
        if(_rpar_ != null)
        {
            _rpar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rpar_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_lpar_)
            + toString(_complexsentence_)
            + toString(_rpar_);
    }

    void removeChild(Node child)
    {
        if(_lpar_ == child)
        {
            _lpar_ = null;
            return;
        }

        if(_complexsentence_ == child)
        {
            _complexsentence_ = null;
            return;
        }

        if(_rpar_ == child)
        {
            _rpar_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_lpar_ == oldChild)
        {
            setLpar((TLpar) newChild);
            return;
        }

        if(_complexsentence_ == oldChild)
        {
            setComplexsentence((PComplexsentence) newChild);
            return;
        }

        if(_rpar_ == oldChild)
        {
            setRpar((TRpar) newChild);
            return;
        }

    }
}
